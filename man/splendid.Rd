% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splendid.R
\name{splendid}
\alias{splendid}
\title{Ensemble framework for Supervised Learning classification problems}
\usage{
splendid(data, class, algorithms = NULL, n = 1, seed = 1,
  convert = FALSE, rfe = FALSE, ova = FALSE, standardize = FALSE,
  plus = TRUE, threshold = 0, trees = 500, tune = FALSE, top = 3,
  sequential = FALSE)
}
\arguments{
\item{data}{data frame with rows as samples, columns as features}

\item{class}{true/reference class vector used for supervised learning}

\item{algorithms}{character vector of algorithms to use for supervised
learning. See \strong{Algorithms} section for possible options. By default,
this argument is \code{NULL}, in which case all algorithms are used.}

\item{n}{number of bootstrap replicates to generate}

\item{seed}{random seed used for reproducibility in bootstrapping results}

\item{convert}{logical; if \code{TRUE}, converts all categorical variables in
\code{data} to dummy variables. Certain algorithms only work with such
limitations (e.g. LDA).}

\item{rfe}{logical; if \code{TRUE}, run Recursive Feature Elimination as a feature
selection method for "lda", "rf", and "svm" algorithms.}

\item{ova}{logical; if \code{TRUE}, a One-Vs-All classification approach is
performed for every algorithm in \code{algorithms}. The relevant results are
prefixed with the string \code{ova_}.}

\item{standardize}{logical; if \code{TRUE}, the training sets are standardized on
features to have mean zero and unit variance. The test sets are
standardized using the vectors of centers and standard deviations used in
corresponding training sets.}

\item{plus}{logical; if \code{TRUE} (default), the .632+ estimator is calculated.
Otherwise, the .632 estimator is calculated.}

\item{threshold}{a number between 0 and 1 indicating the lowest maximum class
probability below which a sample will be unclassified.}

\item{trees}{number of trees to use in "rf" or boosting iterations (trees) in
"adaboost"}

\item{tune}{logical; if \code{TRUE}, algorithms with hyperparameters are tuned}

\item{top}{the number of highest-performing algorithms to retain for ensemble}

\item{sequential}{logical; if \code{TRUE}, a sequential model is fit on the
algorithms that had the best performance with one-vs-all classification.}
}
\value{
A nested list with five elements
\itemize{
\item \code{models}: A list with an element for each algorithm, each of which is a
list with length \code{n}. Shows the model object for each algorithm and bootstrap
replicate on the training set.
\item \code{preds}: A list with an element for each algorithm, each of which is a list
with length \code{n}. Shows the predicted classes for each algorithm and bootstrap
replicate on the test set.
\item \code{evals}: For each bootstrap sample, we can calculate various evaluation
measures for the predicted classes from each algorithm. Evaluation measures
include macro-averaged precision/recall/F1-score, micro-averaged precision,
and (micro-averaged MCC) The return value of \code{eval} is a tibble that shows
some summary statistics (e.g. mean, median) of the evaluation measures across
bootstrap samples, for each classification algorithm.
\item \code{bests}: best-performing algorithm for each bootstrapped replicate of the
data, chosen by rank aggregation.
\item \code{ensemble_algs}: tallies the frequencies in \code{bests}, returning the top
algorithms chosen.
\item \code{ensemble}: list of model fits for each of the algorithms in
\code{ensemble_algs}, fit on the full data.
}
}
\description{
Supervised learning classification algorithms are performed on bootstrap
replicates and an ensemble classifier is built and evaluated across these
variants.
}
\details{
Training sets are bootstrap replicates of the original data sampled with
replacement. Test sets comprise of all remaining samples left out from each
training set, also called Out-Of-Bag samples. This framework uses the 0.632
bootstrap rule for large n.

An ensemble classifier is constructed using Rank Aggregation across multiple
evaluation measures such as precision, recall, F1-score, and Matthew's
Correlation Coefficient (MCC).
}
\section{Algorithms}{
 The classification algorithms currently supported are:
\itemize{
\item Prediction Analysis for Microarrays ("pam")
\item Support Vector Machines ("svm")
\item Random Forests ("rf")
\item Linear Discriminant Analysis ("lda")
\item Shrinkage Linear Discriminant Analysis ("slda")
\item Shrinkage Diagonal Discriminant Analysis ("sdda")
\item Multinomial Logistic Regression using
\itemize{
\item Generalized Linear Model with no penalization ("mlr_glm")
\item GLM with LASSO penalty ("mlr_lasso")
\item GLM with ridge penalty ("mlr_ridge")
\item Neural Networks ("mlr_nnet")
}
\item Neural Networks ("nnet")
\item Naive Bayes ("nbayes")
\item Adaptive Boosting ("adaboost")
\item AdaBoost.M1 ("adaboost_m1")
\item Extreme Gradient Boosting ("xgboost")
\item K-Nearest Neighbours ("knn")
}
}

\examples{
\dontrun{
data(hgsc)
class <- attr(hgsc, "class.true")
sl_result <- splendid(hgsc, class, n = 2, algorithms = c("lda", "xgboost"))
}
}
\author{
Derek Chiu
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prediction.R
\name{prediction}
\alias{prediction}
\alias{prediction.default}
\alias{prediction.pamrtrained}
\alias{prediction.knn}
\title{Class prediction on OOB set}
\usage{
prediction(mod, data, test.id = NULL, threshold = 0.5, class, ...)

\method{prediction}{default}(mod, data, test.id = NULL, threshold = 0.5,
  class, ...)

\method{prediction}{pamrtrained}(mod, data, test.id = NULL, threshold = 0.5,
  class, train.id, ...)

\method{prediction}{knn}(mod, data, test.id = NULL, threshold = 0.5, class,
  train.id, ...)
}
\arguments{
\item{mod}{model object from \code{\link{classification}}}

\item{data}{data frame with rows as samples, columns as features}

\item{test.id}{integer vector of indices for test set}

\item{threshold}{a numeric indicating the lowest maximum class probability
below which a sample will be unclassified.}

\item{class}{true/reference class vector used for supervised learning}

\item{...}{additional arguments to be passed to or from methods}

\item{train.id}{integer vector of indices for training set ID. Only used for
\code{knn} and \code{pamr} prediction methods.}
}
\value{
A factor of predicted classes with labels in the same order as true
  class. If \code{mod} is a \code{"pamr"} classifier, the return value is a
  list of length 2: the predicted class, and the threshold value.
}
\description{
Functions to predict class labels on the Out-Of-Bag (test) set for different
classifiers.
}
\details{
Only the \code{knn} and \code{pamr} prediction methods require the additional
\code{train.id} and \code{class} arguments. For \code{knn}, the modelling and
prediction are performed in one step, so the function takes in both training
and test set identifiers. For \code{pamr}, the classifier needs to be
cross-validated on the training set in order to find a shrinkage threshold
with the minimum CV error to use in prediction on the test set. The other
prediction methods make use of the default method.
}
\examples{
data(hgsc)
class <- attr(hgsc, "class.true")
set.seed(1)
training.id <- sample(seq_along(class), replace = TRUE)
test.id <- which(!seq_along(class) \%in\% training.id)
mod <- classification(hgsc[training.id, ], class[training.id], "lda")
pred <- prediction(mod, hgsc, test.id, class = class)
table(true = class[test.id], pred)
}
\author{
Derek Chiu
}
